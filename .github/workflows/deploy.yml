name: LiqTrade CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - staging
      - master
  pull_request:
    branches:
      - develop
      - staging
      - master

jobs:
  sonar:
    name: Sonar Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Run SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npm install -g sonarqube-scanner
          sonar-scanner \
            -Dsonar.projectKey=Teclit_liqtrade \
            -Dsonar.organization=teclit-org \
            -Dsonar.sources="." \
            -Dsonar.host.url="https://sonarcloud.io" \
            -Dsonar.branch.name="${{ github.ref_name }}" \
            -Dsonar.token="${{ secrets.SONAR_TOKEN }}"

  build:
    name: Build Next.js App
    needs: sonar
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Build Next.js Project
        run: npm run build

  test:
    name: Run Tests
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Run Linting
        run: npm run lint

      - name: Run Tests
        run: |
          if npm run | grep -q "test"; then
            npm test
          else
            echo "No test script found, skipping tests."
          fi
  

  deploy-dev:
    name: Deploy to Development
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Link Vercel Project
        run: vercel link --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Development
        run: vercel --token=${{ secrets.VERCEL_TOKEN }}

  deploy-staging:
    name: Deploy to Staging
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Link Vercel Project
        run: vercel link --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Staging
        run: vercel --prod --token=${{ secrets.VERCEL_TOKEN }}

  deploy-prod:
    name: Deploy to Production
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Link Vercel Project
        run: vercel link --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Production
        run: vercel --prod --token=${{ secrets.VERCEL_TOKEN }}
